/**
 * 国际化配置
 */
import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';

export type Lang = 'en' | 'zh';

/**
 * 翻译资源
 */
const resources = {
  en: {
    translation: {
      language: 'Language',
      en: 'English',
      zh: 'Chinese',
      appTitle: 'Whiteboard',
      untitled: 'Untitled',
      menu: 'Menu',
      layers: 'Layers',
      open: 'Open…',
      save: 'Save',
      saveAs: 'Save As…',
      documentStatusSaved: 'All changes saved',
      documentStatusUnsaved: 'Unsaved changes',
      documentStatusUncreated: 'Not created',
      import: 'Import…',
      backgroundColor: 'Background Color…',
      canvasBackground: 'Canvas Background…',
      exportSvg: 'Export as SVG…',
      exportPng: 'Export as PNG…',
      exportAnimation: 'Export Animation…',
      resetPreferences: 'Reset Preferences',
      clearData: 'Clear Data',
      canvas: 'Canvas',
      expandInfo: 'Expand Info',
      collapseInfo: 'Collapse Info',
      elements: 'Elements',
      zoom: 'Zoom',
      selection: 'Selection',
      rotationMeasurementLabel: 'Rotation angle (degrees)',
      cornerRadiusMeasurementLabel: 'Corner radius',
      confirm: 'Confirm',
      cancel: 'Cancel',
      confirmations: {
        clearCanvas: {
          title: 'Clear canvas',
          message: 'Are you sure you want to clear the entire canvas? This action cannot be undone.',
          confirm: 'Clear',
        },
        clearData: {
          title: 'Clear data',
          message: 'Are you sure you want to clear the data in all animation frames? This action cannot be undone.',
          confirm: 'Clear',
        },
        resetPreferences: {
          title: 'Reset preferences',
          message: 'Are you sure you want to reset all preferences? This will reset your tool and UI settings, but your drawing contents will be kept.',
          confirm: 'Reset',
        },
      },
      traceImage: 'Vectorize image',
      colorsCount: 'Colors',
      lineThreshold: 'Line threshold',
      curveThreshold: 'Curve threshold',
      pathOmit: 'Path omit',
      vectorize: 'Vectorize',
      expandTimeline: 'Expand timeline',
      collapseTimeline: 'Collapse timeline',
      undo: 'Undo ({{shortcut}})',
      redo: 'Redo ({{shortcut}})',
      toolSelect: 'Select (V)',
      toolPen: 'Pen (P)',
      toolBrush: 'Brush (B)',
      toolPolygon: 'Polygon',
      toolRectangle: 'Rectangle (R)',
      toolEllipse: 'Ellipse (O)',
      toolLine: 'Line (L)',
      toolArc: 'Arc (A)',
      toolText: 'Text (T)',
      toolFrame: 'Frame (F)',
      gridSettings: 'Grid settings',
      showGrid: 'Show grid',
      gridSize: 'Grid size',
      subdivisions: 'Subdivisions',
      opacity: 'Opacity',
      modeMove: 'Move/Transform (M)',
      modeEdit: 'Edit anchors (V)',
      modeLasso: 'Lasso selection',
      simplifyPath: 'Simplify path',
      simplify: 'Simplify',
      removeBackground: 'Remove background',
      cropMode: 'Crop mode',
      cropAdjust: 'Crop rectangle',
      cropCutout: 'Cutout',
      cropMagicWand: 'Magic wand',
      cropMagicWandBrush: 'Brush selection',
      cropMagicWandFreehand: 'Freehand selection',
      cropMagicWandPolygon: 'Straight line selection',
      cropMagicWandPolygonHint: 'Double-click or click the first point to close',
      cropMagicWandBrushSize: 'Brush size',
      featherRadius: 'Feather radius',
      cropSelectionAdd: 'Add selection',
      cropSelectionReset: 'Reset selection',
      cropSelectionSubtract: 'Subtract selection',
      cropSelectionInvert: 'Invert',
      subtractSelection: 'Subtract selection',
      cutSelection: 'Cut selection',
      trimTransparent: 'Trim transparent edges',
      contiguous: 'Contiguous',
      threshold: 'Threshold',
      clickImageToSelectArea: 'Click image to select area',
      remove: 'Remove',
      alignDistribute: 'Align & distribute',
      align: 'Align',
      alignLeft: 'Align left',
      alignHorizontalCenter: 'Horizontal center',
      alignRight: 'Align right',
      alignTop: 'Align top',
      alignVerticalCenter: 'Vertical center',
      alignBottom: 'Align bottom',
      distribute: 'Distribute',
      horizontal: 'Horizontal',
      vertical: 'Vertical',
      evenSpacing: 'Even spacing',
      edges: 'Edges',
      centers: 'Centers',
      fixedSpacing: 'Fixed spacing',
      auto: 'Auto',
      booleanOps: 'Boolean operations',
      union: 'Union',
      subtract: 'Subtract',
      intersect: 'Intersect',
      exclude: 'Exclude',
      divide: 'Divide',
      useTopAsMask: 'Use top object as mask',
      traceImageNoPath: 'Tracing produced no paths.',
      traceImageNoSize: 'Unable to determine traced image size.',
      tracedImageGroupName: 'Vectorized image',
      layout: {
        loading: 'Loading…',
        expandMenu: 'Expand menu',
        collapseMenu: 'Collapse menu',
        expandToolbar: 'Expand toolbar',
        collapseToolbar: 'Collapse toolbar',
        about: {
          title: 'About',
          links: {
            vtracer: 'vtracer - PNG to vector tool',
            authorSite: 'Author website - tuclink.com',
          },
        },
        breadcrumbs: {
          root: 'Root',
          groupFallback: 'Group',
        },
      },
      contextMenu: {
        cut: 'Cut',
        copy: 'Copy',
        paste: 'Paste',
        copyStyle: 'Copy style',
        pasteStyle: 'Paste style',
        flipHorizontal: 'Flip horizontal',
        flipVertical: 'Flip vertical',
        group: 'Group',
        ungroup: 'Ungroup',
        bringForward: 'Bring forward',
        sendBackward: 'Send backward',
        bringToFront: 'Bring to front',
        sendToBack: 'Send to back',
        copyAsSvg: 'Copy as SVG',
        copyAsPng: 'Copy as PNG',
        convertToPath: 'Convert to path',
      },
      exporter: {
        png: {
          title: 'PNG export options',
          scale: 'Scale',
          transparentBg: 'Transparent background',
          highQuality: 'High quality compression',
          export: 'Export',
        },
        animation: {
          title: 'Export animation',
          clipRegion: 'Export region',
          clipOptions: {
            fullCanvas: 'Full canvas',
            frame: 'Frame {{index}}',
            frameWithName: 'Frame {{index}} ({{name}})',
          },
          format: 'Format',
          formats: {
            sequence: 'PNG sequence',
            spritesheet: 'Spritesheet',
          },
          columns: 'Columns',
          export: 'Export',
        },
      },
      timeline: {
        rewind: 'Rewind to start',
        play: 'Play',
        pause: 'Pause',
        onionSkin: 'Onion skin',
        opacity: 'Opacity',
        before: 'Previous',
        after: 'Next',
        addFrame: 'Add new frame',
        duplicateFrame: 'Duplicate current frame',
        deleteFrame: 'Delete frame',
        fps: 'FPS',
      },
      layersPanel: {
        empty: 'Canvas is empty',
        clearCanvas: 'Clear canvas',
        confirmClearTitle: 'Clear canvas',
        confirmClearMessage: 'Are you sure you want to clear the current canvas? This action cannot be undone.',
        confirmClearAction: 'Clear',
        deleteSelection: 'Delete selection',
      },
      layerItem: {
        tooltipSelectDrag: 'Click to select, drag to reorder',
        expand: 'Expand',
        collapse: 'Collapse',
        lock: 'Lock',
        unlock: 'Unlock',
        show: 'Show',
        hide: 'Hide',
        delete: 'Delete',
      },
      sideToolbar: {
        frameProperties: 'Frame properties',
        sides: 'Sides',
        borderRadius: 'Corner radius',
        strokeWidth: 'Stroke width',
        strokeColor: 'Stroke color',
        fillColor: 'Fill color',
        styleLibrary: 'Style library',
        colorControl: {
          select: 'Select {{label}}',
        },
        gradientFill: {
          title: 'Gradient fill',
          start: 'Start',
          end: 'End',
          type: 'Type',
          types: {
            solid: 'Solid',
            linear: 'Linear',
            radial: 'Radial',
          },
          handles: {
            start: 'Start handle',
            end: 'End handle',
            center: 'Center handle',
            edge: 'Radius handle',
          },
        },
        fillStyle: {
          title: 'Fill style',
          choose: 'Choose fill style',
          titleWithValue: 'Fill style: {{value}}',
          options: {
            solid: 'Solid',
            hachure: 'Hachure',
            'cross-hatch': 'Cross hatch',
            dots: 'Dots',
            dashed: 'Dashed',
            zigzag: 'Zigzag',
            'zigzag-line': 'Zigzag line',
          },
        },
        styleProperties: {
          title: 'Style properties',
          sketchy: 'Sketchy style',
          roughness: 'Roughness',
          bowing: 'Bowing',
          curveTightness: 'Curve tightness',
          curveStepCount: 'Curve steps',
          preserveVertices: 'Preserve vertices',
          disableMultiStroke: 'Disable multi-stroke',
          fillWeight: 'Fill weight',
          hachureAngle: 'Hachure angle',
          hachureGap: 'Hachure gap',
          disableMultiStrokeFill: 'Disable multi-fill',
        },
        dash: {
          title: 'Dash pattern',
          enable: 'Dashed',
          length: 'Dash length',
          gap: 'Dash gap',
          scrollHint: 'Use scroll wheel to adjust',
        },
        strokeStyle: {
          title: 'Endpoint style',
          startMarker: 'Start marker',
          endMarker: 'End marker',
          fill: 'Endpoint fill',
          size: 'Endpoint size',
          options: {
            none: 'None',
            arrow: 'Arrow',
            reverse_arrow: 'Fork',
            dot: 'Inverted triangle',
            triangle: 'Triangle',
            square: 'Square',
            circle: 'Circle',
            diamond: 'Diamond',
            bar: 'Bar',
          },
          fillOptions: {
            hollow: 'Hollow',
            solid: 'Solid',
          },
        },
        effects: {
          title: 'Effects',
          blur: 'Blur',
          shadow: 'Shadow',
          offsetX: 'Offset X',
          offsetY: 'Offset Y',
          shadowBlur: 'Shadow blur',
          shadowColor: 'Shadow color',
        },
        imageHsv: {
          title: 'Color adjustments',
          hue: 'Hue',
          saturation: 'Saturation',
          value: 'Value',
        },
        styleLibraryPanel: {
          tabs: {
            styles: 'Styles',
            materials: 'Materials',
          },
          optionsTitle: 'Library options',
          load: 'Load…',
          save: 'Save…',
          clear: 'Clear library',
          close: 'Close panel',
          addStyle: 'Add style from selection',
          applyStyle: 'Apply style',
          deleteStyle: 'Delete style',
          addMaterial: 'Add material from selection',
          dragMaterial: 'Drag material',
          deleteMaterial: 'Delete material',
          materialPreview: 'Material preview',
          confirmClearTitle: 'Clear library',
          confirmClearMessage: 'Are you sure you want to clear styles and materials? This action cannot be undone.',
          invalidFile: 'Invalid library file.',
        },
      },
    },
  },
  zh: {
    translation: {
      language: '语言',
      en: '英语',
      zh: '中文',
      appTitle: '画板',
      untitled: '未命名',
      menu: '菜单',
      layers: '图层',
      open: '打开…',
      save: '保存',
      saveAs: '另存为…',
      documentStatusSaved: '已保存',
      documentStatusUnsaved: '未保存',
      documentStatusUncreated: '未创建',
      import: '导入…',
      backgroundColor: '背景颜色…',
      canvasBackground: '画布背景…',
      exportSvg: '导出为 SVG…',
      exportPng: '导出为 PNG…',
      exportAnimation: '导出动画…',
      resetPreferences: '重置偏好设置',
      clearData: '清空数据',
      canvas: '画布',
      expandInfo: '展开信息',
      collapseInfo: '折叠信息',
      elements: '元素',
      zoom: '缩放',
      selection: '选区',
      rotationMeasurementLabel: '旋转角度（度）',
      cornerRadiusMeasurementLabel: '圆角半径',
      confirm: '确认',
      cancel: '取消',
      confirmations: {
        clearCanvas: {
          title: '清空画布',
          message: '确定要清空整个画布吗？此操作无法撤销。',
          confirm: '清空',
        },
        clearData: {
          title: '清空数据',
          message: '确定要清空所有动画帧中的数据吗？此操作无法撤销。',
          confirm: '清空',
        },
        resetPreferences: {
          title: '重置偏好设置',
          message: '您确定要重置所有偏好设置吗？此操作将重置您的工具和 UI 设置，但您的绘图内容将保留。',
          confirm: '重置',
        },
      },
      traceImage: '将图片转换为矢量图',
      colorsCount: '颜色数量',
      lineThreshold: '直线阈值',
      curveThreshold: '曲线阈值',
      pathOmit: '路径忽略',
      vectorize: '矢量化',
      expandTimeline: '展开时间线',
      collapseTimeline: '折叠时间线',
      undo: '撤销 ({{shortcut}})',
      redo: '重做 ({{shortcut}})',
      toolSelect: '选择 (V)',
      toolPen: '钢笔 (P)',
      toolBrush: '画笔 (B)',
      toolPolygon: '多边形',
      toolRectangle: '矩形 (R)',
      toolEllipse: '椭圆 (O)',
      toolLine: '线条 (L)',
      toolArc: '圆弧 (A)',
      toolText: '文本 (T)',
      toolFrame: '画框 (F)',
      gridSettings: '网格设置',
      showGrid: '显示网格',
      gridSize: '网格大小',
      subdivisions: '细分',
      opacity: '透明度',
      modeMove: '移动/变换 (M)',
      modeEdit: '编辑锚点 (V)',
      modeLasso: '套索选择',
      simplifyPath: '简化路径',
      simplify: '简化',
      removeBackground: '抠图',
      cropMode: '裁剪模式',
      cropAdjust: '裁剪',
      cropCutout: '抠图',
      cropMagicWand: '魔棒',
      cropMagicWandBrush: '画笔',
      cropMagicWandFreehand: '手绘',
      cropMagicWandPolygon: '直线',
      cropMagicWandPolygonHint: '双击或点击起点闭合选区',
      cropMagicWandBrushSize: '笔刷大小',
      featherRadius: '羽化半径',
      cropSelectionAdd: '添加',
      cropSelectionReset: '单选',
      cropSelectionSubtract: '减少',
      cropSelectionInvert: '反转',
      trimTransparent: '裁切透明边缘',
      subtractSelection: '擦除',
      cutSelection: '剪切',
      contiguous: '连续',
      threshold: '阈值',
      clickImageToSelectArea: '点击图片以选择区域',
      remove: '扣除',
      alignDistribute: '对齐与分布',
      align: '对齐',
      alignLeft: '左对齐',
      alignHorizontalCenter: '水平居中',
      alignRight: '右对齐',
      alignTop: '顶端对齐',
      alignVerticalCenter: '垂直居中',
      alignBottom: '底端对齐',
      distribute: '分布',
      horizontal: '水平',
      vertical: '垂直',
      evenSpacing: '均匀间隔',
      edges: '边',
      centers: '中心',
      fixedSpacing: '固定间距',
      auto: '自动',
      booleanOps: '布尔运算',
      union: '并集',
      subtract: '减去',
      intersect: '相交',
      exclude: '排除',
      divide: '修剪',
      useTopAsMask: '使用顶层对象作为蒙版',
      traceImageNoPath: '图片矢量化未能生成任何路径。',
      traceImageNoSize: '无法确定矢量化后图片的尺寸。',
      tracedImageGroupName: '矢量化图片',
      layout: {
        loading: '正在加载…',
        expandMenu: '展开菜单',
        collapseMenu: '折叠菜单',
        expandToolbar: '展开工具栏',
        collapseToolbar: '折叠工具栏',
        about: {
          title: '关于',
          links: {
            vtracer: 'vtracer - PNG转矢量工具',
            authorSite: '作者官网 - tuclink.com',
          },
        },
        breadcrumbs: {
          root: '根',
          groupFallback: '编组',
        },
      },
      contextMenu: {
        cut: '剪切',
        copy: '复制',
        paste: '粘贴',
        copyStyle: '复制样式',
        pasteStyle: '粘贴样式',
        flipHorizontal: '水平翻转',
        flipVertical: '垂直翻转',
        group: '编组',
        ungroup: '取消编组',
        bringForward: '上移一层',
        sendBackward: '下移一层',
        bringToFront: '置于顶层',
        sendToBack: '置于底层',
        copyAsSvg: '复制为 SVG',
        copyAsPng: '复制为 PNG',
        convertToPath: '转换为路径',
      },
      exporter: {
        png: {
          title: 'PNG 导出选项',
          scale: '比例',
          transparentBg: '透明背景',
          highQuality: '高质量压缩',
          export: '导出',
        },
        animation: {
          title: '导出动画',
          clipRegion: '导出区域',
          clipOptions: {
            fullCanvas: '完整画布',
            frame: '画框 {{index}}',
            frameWithName: '画框 {{index}} ({{name}})',
          },
          format: '格式',
          formats: {
            sequence: 'PNG 序列',
            spritesheet: '精灵图',
          },
          columns: '列数',
          export: '导出',
        },
      },
      timeline: {
        rewind: '回到开头',
        play: '播放',
        pause: '暂停',
        onionSkin: '洋葱皮',
        opacity: '透明度',
        before: '之前',
        after: '之后',
        addFrame: '添加新帧',
        duplicateFrame: '复制当前帧',
        deleteFrame: '删除帧',
        fps: 'FPS',
      },
      layersPanel: {
        empty: '画布为空',
        clearCanvas: '清空画布',
        confirmClearTitle: '清空画布',
        confirmClearMessage: '确定要清空当前画布吗？此操作无法撤销。',
        confirmClearAction: '清空',
        deleteSelection: '删除选中',
      },
      layerItem: {
        tooltipSelectDrag: '单击以选择，拖动以重新排序',
        expand: '展开',
        collapse: '折叠',
        lock: '锁定',
        unlock: '解锁',
        show: '显示',
        hide: '隐藏',
        delete: '删除',
      },
      sideToolbar: {
        frameProperties: '画框属性',
        sides: '边数',
        borderRadius: '圆角',
        strokeWidth: '宽度',
        strokeColor: '描边色',
        fillColor: '背景色',
        styleLibrary: '样式库',
        colorControl: {
          select: '选择{{label}}',
        },
        gradientFill: {
          title: '渐变填充',
          start: '起始色',
          end: '结束色',
          type: '类型',
          types: {
            solid: '纯色',
            linear: '线性',
            radial: '圆形',
          },
          handles: {
            start: '起始控制点',
            end: '结束控制点',
            center: '圆心控制点',
            edge: '半径控制点',
          },
        },
        fillStyle: {
          title: '填充样式',
          choose: '选择填充样式',
          titleWithValue: '填充样式：{{value}}',
          options: {
            solid: '实心',
            hachure: '平行',
            'cross-hatch': '十字',
            dots: '圆点',
            dashed: '虚线',
            zigzag: '涂鸦',
            'zigzag-line': '锯齿',
          },
        },
        styleProperties: {
          title: '样式属性',
          sketchy: '手绘风格',
          roughness: '粗糙度',
          bowing: '弯曲度',
          curveTightness: '平滑度',
          curveStepCount: '曲线步数',
          preserveVertices: '禁用端点随机',
          disableMultiStroke: '禁用多重描边',
          fillWeight: '填充权重',
          hachureAngle: '影线角度',
          hachureGap: '影线间距',
          disableMultiStrokeFill: '禁用多重填充',
        },
        dash: {
          title: '虚线样式',
          enable: '虚线',
          length: '虚线长度',
          gap: '虚线间隔',
          scrollHint: '使用滚轮调节',
        },
        strokeStyle: {
          title: '端点样式',
          startMarker: '起点标记',
          endMarker: '终点标记',
          fill: '端点填充',
          size: '端点尺寸',
          options: {
            none: '无',
            arrow: '箭头',
            reverse_arrow: '分叉',
            dot: '倒三角',
            triangle: '三角',
            square: '方块',
            circle: '圆',
            diamond: '菱形',
            bar: '竖线',
          },
          fillOptions: {
            hollow: '空心',
            solid: '实心',
          },
        },
        effects: {
          title: '效果',
          blur: '模糊',
          shadow: '阴影',
          offsetX: 'X 偏移',
          offsetY: 'Y 偏移',
          shadowBlur: '阴影模糊',
          shadowColor: '阴影颜色',
        },
        imageHsv: {
          title: '色彩调节',
          hue: '色相',
          saturation: '饱和度',
          value: '明度',
        },
        styleLibraryPanel: {
          tabs: {
            styles: '样式',
            materials: '素材',
          },
          optionsTitle: '素材库选项',
          load: '加载…',
          save: '保存…',
          clear: '清空图库',
          close: '关闭面板',
          addStyle: '从选区添加样式',
          applyStyle: '应用样式',
          deleteStyle: '删除样式',
          addMaterial: '从选区添加素材',
          dragMaterial: '拖拽素材',
          deleteMaterial: '删除素材',
          materialPreview: '素材预览',
          confirmClearTitle: '清空图库',
          confirmClearMessage: '确定要清空样式和素材库吗？此操作无法撤销。',
          invalidFile: '无效的素材库文件。',
        },
      },
    },
  },
} as const;

const storedLang = localStorage.getItem('whiteboard_lang') as Lang | null;

/**
 * 检测系统语言
 */
const detectSystemLang = (): Lang | null => {
  if (typeof navigator === 'undefined') {
    return null;
  }
  const lang = navigator.language.split('-')[0] as Lang;
  return ['en', 'zh'].includes(lang) ? lang : null;
};

const systemLang = detectSystemLang();

void i18n.use(initReactI18next).init({
  resources,
  lng: storedLang ?? systemLang ?? 'en',
  fallbackLng: 'en',
  interpolation: { escapeValue: false },
});

/**
 * 支持的语言列表
 */
export const supportedLangs: {
  code: Lang;
  abbr: string;
}[] = [
  { code: 'en', abbr: 'EN' },
  { code: 'zh', abbr: 'CN' },
];

export default i18n;
